🚀 Desafio Marvel API – QA & Automação do Zero

Recentemente, me propus a criar do zero um projeto completo, integrando Front-End, API e testes automatizados, usando a Marvel API como base. 
🎯 Objetivo: Aprimorar minhas habilidades em QA e automação de testes, explorando Cypress para testes E2E e de interface, além de Postman e Cypress para validação de APIs e execução de testes manuais e automatizados.

  
🛠️ Passo a passo do que foi feito

1️⃣ Configuração do Ambiente

- Criação de conta no Marvel Developer Portal

- Geração das chaves pública e privada

- Configuração segura com .env 

- Testes iniciais de autenticação


2️⃣ Desenvolvimento da Aplicação (HTML, CSS e JS)

Como a Marvel API oferece apenas endpoints GET, sem interface visual, desenvolvi uma aplicação web local para consumir e exibir os dados.

- Interface intuitiva para buscar personagens, comics e séries

- Renderização dinâmica de imagens e detalhes

- Funções de navegação e cliques condicionais 


3️⃣ Integração com a Marvel API (Backend)

- Implementação com Node/Express

- Autenticação segura via MD5 e variáveis de ambiente

- Rotas configuradas para personagens, comics e séries 


4️⃣ Testes Automatizados

- Estrutura POM (Page Object Model) para organização dos testes

- Custom Commands no Cypress para buscas e verificações de API

- Testes E2E validando respostas da API e comportamento da interface

Postman: testes manuais e scripts automatizados

Cypress: interceptação e validação dos status antes do render 


5️⃣ Relatório Final – Testes Postman & Cypress

Objetivo: validar integridade da API, status codes, campos e filtros

- Postman: testes manuais dos endpoints de personagens, comics e séries

- Cypress: testes automatizados validando renderização e status das requisições

- Evidências:

 📸 Prints armazenados em docs/postman-api-screenshots/ e docs/e2e-api-screenshots/

 🎥 Vídeos de testes manuais da interface e execuções automatizadas do Cypress em docs/interface-videos-tests/

- Conclusão: todos os endpoints validados, filtros funcionando e interface reagindo corretamente aos dados da API ✅

6️⃣ Aprendizados e Conquistas

- Tratamento de respostas lentas e elementos dinâmicos 

- Estrutura de testes E2E confiável e reutilizável

- Projeto completo unindo front, back e automação 
  

📂 Confira o projeto completo no GitHub:

 🔗 github.com/viniciuspita/marvel-api-tests


#QA #Automation #Cypress #E2ETesting #TestesDeAPI #DevQA #TestesAutomatizados #MarvelAPI #FullStack #FrontEnd #BackEnd

